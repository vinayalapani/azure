{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "source2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TARGET2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Series_reference as string,",
				"          Period as string,",
				"          Data_value as string,",
				"          Suppressed as string,",
				"          STATUS as string,",
				"          UNITS as string,",
				"          Magnitude as string,",
				"          Subject as string,",
				"          Group as string,",
				"          Series_title_1 as string,",
				"          Series_title_2 as string,",
				"          Series_title_3 as string,",
				"          Series_title_4 as string,",
				"          Series_title_5 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          Series_reference,",
				"          Period,",
				"          DATAVALUES = Data_value,",
				"          Suppressed,",
				"          STATUS,",
				"          UNITS,",
				"          Magnitude,",
				"          Subject,",
				"          Group,",
				"          Series_title_2,",
				"          Series_title_3,",
				"          Series_title_4,",
				"          Series_title_5",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}